{"version":3,"sources":["coverimg.JPG","aboutpic.JPG","Home.js","About.js","NavBar.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeSplash","styled","div","_templateObject","Splash","QuickLinksWrapper","_templateObject2","Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","href","class","Component","AboutWrap","About_templateObject","AboutSplash","About","NavBar","NavBar_templateObject","ListOfProjects","Projects_templateObject","Project","Projects_templateObject2","Projects","width","height","src","frameborder","allow","allowfullscreen","App","BrowserRouter","id","Link","to","Home_Home","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db2ecdcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coverimg.d87c8778.JPG\";","module.exports = __webpack_public_path__ + \"static/media/aboutpic.f37a8f7d.JPG\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Splash from './coverimg.JPG';\n//TODO ADD PARALLAX TO BACKGROUND IMG\nconst HomeSplash = styled.div`\n  background-image:url(${Splash});\n  background-position:center;\n  background-size:cover;\n  width:100%;\n  height:100vh;   \n  display:flex;\n  justify-content:center;\n  align-items:center;\n  h1{\n    margin:0;\n    text-align:center;\n    text-shadow: 1px 1px 2px gray;\n  }\n`;\n\nconst QuickLinksWrapper=styled.div`\n  width:100%;\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n  background-color:\t#C8C8C8;\n  a{\n    color:black;\n  }\n`\nexport class Home extends Component {\n    render(){\n        return(\n          <div>\n            <HomeSplash>\n                <h1>BRIAN TRANG</h1>\n            </HomeSplash>\n            <QuickLinksWrapper>\n              <h1>Quick Links</h1>\n              <a href=\"https://github.com/bullettrang\"><h2><i class=\"fab fa-github\"></i> GITHUB</h2></a>\n              <a href=\"https://www.linkedin.com/in/btrangcal/\"><h2><i class=\"fab fa-linkedin\"></i> LinkedIn</h2></a>  \n            </QuickLinksWrapper>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport AboutSplash from './aboutpic.JPG';\n\nconst AboutWrap = styled.div`\n  background-image: linear-gradient(\n    rgba(0, 0, 0, 0.5),\n    rgba(0, 0, 0, 0.5)\n  ),url(${AboutSplash});\n  background-position:center;\n  background-size:cover;\n  width:100%;\n  height:100vh;   \n  display:flex;\n  justify-content:center;\n  align-items:center;\n  h2{\n    color:white;\n    margin:0;\n    text-align:center;\n    text-shadow: 1px 1px 2px black;\n  }\n`;\nexport class About extends Component{\n    render(){\n        return(\n            <AboutWrap>\n                <article>\n                    <h2>Hi! I am Brian Trang and you're reading my about page. </h2>\n                    <h2>I enjoy MMA, learning, rock climbing, shooting, and walking my dogs.</h2>\n                </article>\n            </AboutWrap>\n        )\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nexport const NavBar = styled.div`\ndisplay: flex;\nflex-flow: row wrap;\njustify-content: flex-end;\nheight:5em;\nbackground: #7395AE;\nposition: fixed; /* Set the navbar to fixed position */\ntop: 0; /* Position the navbar at the top of the page */\nwidth: 100%; /* Full width */\n\na{\n  text-decoration: none;\n  display: block;\n  padding: 2em;\n  color: black;\n}\n`;\n\n\n\n","import React, {Component} from 'react';\nimport styled from 'styled-components';\n\nconst ListOfProjects = styled.div`\n    width:100%;\n    height:100vh;\n    background:blue;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    flex-direction:column;\n`;\n\nconst Project = styled.div`{\n    position:relative;\n    top:5em;\n    border:1px solid black;\n    padding:1em;\n}`;\n\n//component display Gallery of Projects\nexport class Projects extends Component{\n    render(){\n        return( \n            <ListOfProjects>\n                <h1>My Projects</h1>\n                <Project>\n                <iframe \n                    width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_HKAeDvNcGE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n                </iframe>\n                <p>Santorini: A Unity Game: Made with C# using the Unity Engine</p>\n                </Project>\n                \n            </ListOfProjects>\n            \n            );\n       \n    }\n}","import React, { Component } from 'react';   \nimport './App.css';\nimport {Home} from './Home';\nimport{About} from './About';\nimport {NavBar} from './NavBar';\nimport{Projects} from './Projects';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n//TODO\n// make navbar a HOC\n//Add Projects page\n//create Portfolio\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div>\n        <NavBar id=\"NavBar\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/about/\">About</Link>\n          <Link to=\"/projects/\">Portfolio</Link>\n        </NavBar>\n        <Home/>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/projects/\" component={Projects}/>\n{/*             \n<Route path=\"/users/\"/> */}\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}